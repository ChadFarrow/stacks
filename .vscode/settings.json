{
  "typescript.tsdk": "node_modules/typescript/lib",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "editor.formatOnSave": true,
  "eslint.format.enable": true,
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": true
  },
  "eslint.codeAction.showDocumentation": {
    "enable": true
  },
  "editor.quickSuggestions": {
    "strings": true
  },
  "editor.defaultFormatter": "dbaeumer.vscode-eslint",
  "[jsonc]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[markdown]": {
    "editor.defaultFormatter": "DavidAnson.vscode-markdownlint",
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true
  },
  "[shellscript]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "git.enableSmartCommit": true,
  "css.validate": false, // for WindiCSS IntelliSense
  "npm.enableRunFromFolder": true,
  "eslint.packageManager": "pnpm",
  "npm.packageManager": "pnpm",
  "editor.gotoLocation.multipleDefinitions": "goto",
  "windicss.sortOnSave": true,
  "unocss.root": "./.stacks/core/unocss.ts",
  "markdownlint.ignore": [
    "CHANGELOG.md"
  ],
  "markdownlint.config": {
    "default": true,
    "MD033": {
      "allowed_elements": ["details", "summary"]
    },
    "MD041": false
  },
  "search.exclude": {
    "**/*.cjs": true,
    "**/*.mjs": true,
    "**/node_modules": true,
    "CHANGELOG.md": true
  },
  "explorer.confirmDragAndDrop": false,
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "volar.autoCompleteRefs": false,
  "volar.completion.preferredTagNameCase": "pascal",
  "todo-tree.highlights.enabled": true,
  "cSpell.ignorePaths": [
    "node_modules",
    "lang/de.yml"
  ],
  "explorer.fileNesting.patterns": {
    "*.css": "$(capture).css.map, $(capture).*.css",
    "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
    "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx",
    "*.ts": "$(capture).js, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
    "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx",
    "*.vue": "$(capture).*.ts, $(capture).*.js",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    "cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "package.json": "tea.yaml, dictionary.txt, web-types.json, simple-git-hooks.cjs, custom-elements.json, .browserslist*, .circleci*, .codecov, .commitlint*, .cz-config.js, .czrc, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lighthouserc.*, .lintstagedrc*, .markdownlint*, .mocha*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, api-extractor.json, apollo.config.*, appveyor*, ava.config.*, azure-pipelines*, bower.json, commitlint*, crowdin*, cypress.json, dangerfile*, dprint.json, firebase.json, grunt*, gulp*, jasmine.*, jenkins*, jest.config.*, jsconfig.*, karma*, lerna*, lighthouserc.*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, package.nls*.json, phpcs.xml, playwright.config.*, pm2.*, pnpm*, prettier*, pullapprove*, puppeteer.config.*, pyrightconfig.json, release-tasks.sh, renovate*, rollup.config.*, stylelint*, tsconfig.*, tsdoc.*, tslint*, tsup.config.*, turbo*, typedoc*, vercel*, vetur.config.*, vitest.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "readme*": "authors, backers.md, changelog.md, citation*, code_of_conduct.md, codeowners, contributing.md, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors.md",
    "shims.d.ts": "*.d.ts"
  },
  "cSpell.dictionaries": ["stacks-dictionary"],
  "cSpell.diagnosticLevel": "Hint",
  "cSpell.customDictionaries": {
    "stacks": {
      "name": "stacks-dictionary",
      "path": "./.stacks/dictionary.txt",
      "scope": "user",
      "addWords": true
    },
    "custom": true // Enable the `custom` dictionary
  },
  "prettier.enable": false, // to ensure it is disabled
  "terminal.integrated.scrollback": 10000,
  "grammarly.files.include": ["**/README.md", "**/readme.md", "**/*.txt"],
  "grammarly.files.exclude": [
    "**/dictionary.txt"
  ],
}
