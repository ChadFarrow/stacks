name: CI

on:
  push:
    branches:
      - main # deploys to prod

    tags:
      - '*-beta.*' # ensures it is deployed to stage in case `main`` is not pushed to

  pull_request:
    branches:
      - main # deploys to dev

env:
  PR_NUMBER: '${{ github.event.number }}'
  SOURCE_BRANCH: $GITHUB_HEAD_REF
  FIXER_BRANCH: auto-fixed/$GITHUB_HEAD_REF
  TITLE: 'chore: apply fixes from JS-CS-Fixer'
  DESCRIPTION: This merge request applies JS code style fixes from an analysis carried out through GitHub Actions.

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    strategy:
      matrix:
        os: [ubuntu-latest]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Use cached node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            node-modules-

      - name: Install Dependencies
        run: bun install

      - name: Build ESLint Config
        run:  bunx pnpm --filter='./storage/framework' build

      - name: Lint
        run: bun buddy lint

  typecheck:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
      fail-fast: false

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Use cached node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            node-modules-

      - name: Install dependencies
        run: bun install

      - name: Typecheck
        run: bun buddy test:types

  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
      fail-fast: false

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Use cached node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            node-modules-

      - name: Install Dependencies
        run: bun install

      - name: Test Suite
        run: bun --bun run test

  release-check:
    runs-on: ubuntu-latest

    outputs:
      contains_release: ${{ steps.check_release.outputs.contains_release }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Release Check
        id: check_release
        run: |
          echo "CONTAINS_RELEASE=$(git log --format=%B -n 1 ${{ github.event.after }} | grep -ci 'release')" >> $GITHUB_ENV
          echo "::set-output name=contains_release::${{ env.CONTAINS_RELEASE }}"

  deploy-prod:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && needs.check_commit_message.outputs.contains_release == '0'
    needs: [lint, typecheck, test]
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Use cached node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            node-modules-

      - name: Install Dependencies
        run: bun install

      - name: Deploy
        run: bun buddy deploy production

  deploy-stage:
    if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || (startsWith(github.ref, 'refs/tags/') && contains(github.ref, '-beta.'))
    needs: [lint, typecheck, test, deploy-prod, deploy-dev]
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Use cached node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            node-modules-

      - name: Install Dependencies
        run: bun install

  deploy-dev:
    if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.event_name == 'pull_request' && github.base_ref == 'main')
    needs: [lint, typecheck, test, deploy-prod]
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Use cached node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            node-modules-

      - name: Install Dependencies
        run: bun install
