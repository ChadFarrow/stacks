name: Releaser

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  release:
    # name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Use Cached node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            node-modules-

      - name: Install Dependencies
        run: bun install

      - name: Publish Framework
        run: ./storage/framework/scripts/publish
        env:
          BUN_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: Publish Dummy Libraries
        run: bun --filter='./storage/framework' run publish:dummy-libs
        env:
          BUN_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: Publish VS Code Extension
        run: |
          cd storage/framework/defaults/ide/vscode
          bun install
          bunx --bun vsce publish
          cd ../../../../
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}

      - name: Extract tag version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            storage/framework/core/buddy/bin/buddy-linux-x64
            storage/framework/core/buddy/bin/buddy-linux-arm64
            storage/framework/core/buddy/bin/buddy-windows-x64.exe
            storage/framework/core/buddy/bin/buddy-darwin-x64
            storage/framework/core/buddy/bin/buddy-darwin-arm64
          name: ${{ env.VERSION }}
          tag_name: ${{ env.VERSION }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
