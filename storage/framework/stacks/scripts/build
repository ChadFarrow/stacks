#!/bin/sh

# Get the script's directory
script_dir=$(realpath $(dirname "$0"))

# Get all directories in the core path
dirs=$(find "$script_dir/../core" -type d -maxdepth 1)

# Check if no directories found
if [ -z "$dirs" ]; then
  echo "No core packages found"
  exit 1
fi

# Loop through each directory
for dir in $dirs; do
  echo ""
  echo "🏗️  Building..."
  echo "📦 $dir"

  # Change to the directory
  cd $dir

  # Check if the directory is one of the specified ones
  case "$dir" in
    ## This is because eslint requires cjs builds which we use tsup for
    *"/eslint-config")
      # build the package
      bun run build
      ;;
    *)
    # Check if build.ts exists in the directory
    if [ -f "build.ts" ]; then
      # Extract the command from build.ts
      cmd=$(sed -nE "s/.*runCommand\('(.*)',.*/\1/p" build.ts)
      # Run the extracted command
      eval $cmd
    fi

    # Check if build-server.ts exists in the directory
    # the cloud package needs this check
    # if [ -f "build-server.ts" ]; then
    #   # Extract the command from build-server.ts
    #   cmd=$(sed -nE "s/.*runCommand\('(.*)',.*/\1/p" build-server.ts)
    #   # Run the extracted command
    #   eval $cmd
    # fi

    # at the end of the build, we need to replace "stacks:" with "@stacksjs/"
    # Check if dist directory exists
    # if [ -d "dist" ]; then
    #   # Change to the dist directory
    #   cd dist

    #   # Find all files in the dist directory
    #   files=$(find . -type f)

    #   # Loop through each file
    #   for file in $files; do
    #     # Check if the file contains "stacks:"
    #     if grep -q "stacks:" "$file"; then
    #       # Replace "stacks:" with "@stacksjs/" and write changes to the file
    #       sed -i '' 's/stacks:/@stacksjs\//g' "$file" # unsure if this works outside of macos
    #     fi
    #   done

    #   # Change back to the parent directory
    #   cd ..
    # fi
    ;;
  esac

  # Check if the build command was successful
  if [ $? -ne 0 ]; then
    echo "Failed to build $dir"
    exit 1
  fi

  echo "✅ Build complete"
  echo ""

  # Change back to the original directory
  cd - >/dev/null
done
